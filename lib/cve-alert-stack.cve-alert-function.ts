import { Context } from 'aws-lambda';
import { Logger } from '@aws-lambda-powertools/logger';
import Parser from 'rss-parser';
import * as AWS from 'aws-sdk';
import { LambdaFunctionContext } from '@aws-lambda-powertools/logger/lib/types';

const logger = new Logger();
const parser = new Parser();
const Lambda = new AWS.Lambda();
const ses = new AWS.SES();

export const handler = async (event: any, context: Context): Promise<any> => {
  const promises: any = [];
  try {
    let latestItemDate = new Date(process.env.RSS_LATEST_ITEM || "2000/01/01 00:00:00");
    logger.debug("Parsing RSS feed");
    const feed = await parser.parseURL('https://aws.amazon.com/de/security/security-bulletins/rss/feed/');
    logger.debug("Parsing dates and sorting oldest to newest");
    let items = converDatesAndSort(feed.items);
    logger.debug("Iterating through items")
    await items.forEach(async (i: any) => {
      if (latestItemDate < i.convertedDate) {
        logger.debug("Found new item from "+i.pubDate);
        promises.push(sendEmail(i));
        latestItemDate = i.convertedDate;
      }
    });
    if(latestItemDate.toISOString()!==new Date(process.env.RSS_LATEST_ITEM || "2000/01/01 00:00:00").toISOString()){
      await Promise.all(promises);
      logger.info("Sent all mails & updated env");
      await updateEnv(latestItemDate);
      logger.info("Updated environment variable.");
    } else {
      logger.info("Done. No new items found.")
    }
  } catch(e: unknown) {
    logger.error("Parsing RSS feed failed "+e);
  }

}

const converDatesAndSort = (items: any): any => {
  return items.map((i: any)=>{
    i.convertedDate = new Date(i.pubDate)
    return i;
  }).sort((a: any, b:any) => {
    return a.convertedDate - b.convertedDate;
  })
}

const sendEmail = (item: any) => {
  logger.debug("Sending email...")
  var params = {
    Destination: {
     ToAddresses: process.env.SES_RECEPIENTS!.split(",")
    }, 
    Message: {
     Body: {
      Text: {
       Charset: "UTF-8", 
       Data: "New CVE in AWS security-bulletins feed: "+item.title+"\n\n"+item.link
      }
     }, 
     Subject: {
      Charset: "UTF-8", 
      Data: "New CVE in AWS security-bulletins feed: "+item.title
     }
    }, 
    Source: process.env.SES_SENDER! 
   };
   return ses.sendEmail(params).promise();
}

const updateEnv = (newDate: Date) => {
  const params = {
    FunctionName: process.env.AWS_LAMBDA_FUNCTION_NAME!,
    Environment: {
      Variables: {
        'SES_RECEPIENTS': process.env.SES_RECEPIENTS!,
        'SES_SENDER': process.env.SES_SENDER!,
        'LOG_LEVEL': process.env.LOG_LEVEL!,
        'POWERTOOLS_SERVICE_NAME': process.env.POWERTOOLS_SERVICE_NAME!,
        'RSS_LATEST_ITEM': newDate.toISOString(),
      }
    }
  }
  return Lambda.updateFunctionConfiguration(params).promise();
}